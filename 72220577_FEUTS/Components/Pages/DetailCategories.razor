@page "/categories/{id:int}"
@rendermode InteractiveServer
@inject NavigationManager NavigationManager
@using _72220577_FEUTS.Services
@inject ccService ccService
@using _72220577_FEUTS.Model

<h3>Edit Category Details</h3>

@if (category != null)
{
    <EditForm Model="@category" OnValidSubmit="@HandleValidSubmit">
        <div class="form-group">
            <label for="categoryId">Category ID</label>
            <input id="categoryId" class="form-control" type="text" @bind="@category.categoryId" readonly />
        </div>

        <div class="form-group">
            <label for="name">Name</label>
            <input id="name" class="form-control" type="text" @bind="@category.name" />
        </div>

        <div class="form-group">
            <label for="description">Description</label>
            <textarea id="description" class="form-control" @bind="@category.description"></textarea>
        </div>

        <div class="form-group">
            <button type="submit" class="btn btn-primary">Save</button>
            <button type="button" class="btn btn-secondary" @onclick="TurnBack">Cancel</button>
        </div>
    </EditForm>
}
else
{
    <p>There's no such category... Please get back</p>
    <button type="button" class="btn btn-primary" @onclick="TurnBack">Back</button>
}

@code {
    [Parameter]
    public int id { get; set; }

    private category category;

    protected override async Task OnInitializedAsync()
    {
        // Fetch a single category using ccService
        category = await ccService.GetCategoryByIdAsync(id);
    }

    private void TurnBack()
    {
        NavigationManager.NavigateTo("/categories");
    }

    private async Task HandleValidSubmit()
    {
        // Update the category using ccService
        await ccService.UpdateCategoryAsync(category);

        // Navigate back to the categories page after successful update
        TurnBack();
    }
}
